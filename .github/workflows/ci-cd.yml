name: 'CI/CD'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  CI:
    runs-on: ubuntu-latest
    env:
      KAKAO_CLIENT_ID: ${{ secrets.TEST_STRING_ENV }}
      KAKAO_CLIENT_SECRET: ${{ secrets.TEST_STRING_ENV }}
      KAKAO_REDIRECT_URI: ${{ secrets.TEST_STRING_ENV }}
      JWT_SECRET_KEY: ${{ secrets.TEST_JWT_KEY }}
      JWT_REFRESH_EXPIRE: ${{ secrets.TEST_INT_ENV }}
      JWT_ACCESS_EXPIRE: ${{ secrets.TEST_INT_ENV }}
      AWS_BUCKET_NAME: ${{ secrets.TEST_STRING_ENV }}
      AWS_ACCESS_KEY: ${{ secrets.TEST_STRING_ENV }}
      AWS_SECRET_KEY: ${{ secrets.TEST_STRING_ENV }}
      AWS_REGION: 'ap-northeast-2'
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      - name: Run tests
        run: ./gradlew test --no-daemon

  CD:
    needs: CI
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:server .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:server

      - name: Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          env:
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
            DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
          script: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
  
            sudo docker pull $DOCKER_USERNAME/$DOCKER_REPOSITORY:server
  
            sudo docker stop server || true
            sudo docker rm server || true
  
            docker run -d --name server --env-file ~/env.list -p 8080:8080 $DOCKER_USERNAME/$DOCKER_REPOSITORY:server
